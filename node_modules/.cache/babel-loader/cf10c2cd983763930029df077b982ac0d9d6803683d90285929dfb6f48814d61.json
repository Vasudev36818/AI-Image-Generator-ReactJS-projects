{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { query, collection, where, orderBy, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../config/firebase-config\";\nimport { useGetUserInfo } from \"./useGetUserInfo\";\nexport const useGetTransactions = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [transactionTotals, setTransactionTotals] = useState({\n    balance: 0.0,\n    income: 0.0,\n    expenses: 0.0\n  });\n  const transactionCollectionRef = collection(db, \"transactions\");\n  const {\n    userID\n  } = useGetUserInfo();\n  const getTransactions = async () => {\n    let unsubscribe;\n    try {\n      const queryTransactions = query(transactionCollectionRef, where(\"userID\", \"==\", userID), orderBy(\"createdAt\"));\n      unsubscribe = onSnapshot(queryTransactions, snapshot => {\n        let docs = [];\n        let totalIncome = 0;\n        let totalExpenses = 0;\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          const id = doc.id;\n          docs.push({\n            ...data,\n            id\n          });\n          if (data.transactionType === \"expense\") {\n            totalExpenses += Number(data.transactionAmount);\n          } else {\n            totalIncome += Number(data.transactionAmount);\n          }\n          console.log(totalExpenses, totalIncome);\n        });\n        setTransactions(docs);\n        let balance = totalIncome - totalExpenses;\n        setTransactionTotals({\n          balance,\n          expenses: totalExpenses,\n          income: totalIncome\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n    return () => unsubscribe();\n  };\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  return {\n    transactions,\n    transactionTotals\n  };\n};\n_s(useGetTransactions, \"xc5nxlyr/w5i9q9p5A8dIe0qLlM=\", false, function () {\n  return [useGetUserInfo];\n});","map":{"version":3,"names":["useEffect","useState","query","collection","where","orderBy","onSnapshot","db","useGetUserInfo","useGetTransactions","_s","transactions","setTransactions","transactionTotals","setTransactionTotals","balance","income","expenses","transactionCollectionRef","userID","getTransactions","unsubscribe","queryTransactions","snapshot","docs","totalIncome","totalExpenses","forEach","doc","data","id","push","transactionType","Number","transactionAmount","console","log","err","error"],"sources":["E:/github_React-project/expense-tracker-firebase-react-main/src/hooks/useGetTransactions.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  query,\n  collection,\n  where,\n  orderBy,\n  onSnapshot,\n} from \"firebase/firestore\";\nimport { db } from \"../config/firebase-config\";\nimport { useGetUserInfo } from \"./useGetUserInfo\";\n\nexport const useGetTransactions = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [transactionTotals, setTransactionTotals] = useState({\n    balance: 0.0,\n    income: 0.0,\n    expenses: 0.0,\n  });\n\n  const transactionCollectionRef = collection(db, \"transactions\");\n  const { userID } = useGetUserInfo();\n\n  const getTransactions = async () => {\n    let unsubscribe;\n    try {\n      const queryTransactions = query(\n        transactionCollectionRef,\n        where(\"userID\", \"==\", userID),\n        orderBy(\"createdAt\")\n      );\n\n      unsubscribe = onSnapshot(queryTransactions, (snapshot) => {\n        let docs = [];\n        let totalIncome = 0;\n        let totalExpenses = 0;\n\n        snapshot.forEach((doc) => {\n          const data = doc.data();\n          const id = doc.id;\n\n          docs.push({ ...data, id });\n\n          if (data.transactionType === \"expense\") {\n            totalExpenses += Number(data.transactionAmount);\n          } else {\n            totalIncome += Number(data.transactionAmount);\n          }\n\n          console.log(totalExpenses, totalIncome);\n        });\n\n        setTransactions(docs);\n\n        let balance = totalIncome - totalExpenses;\n        setTransactionTotals({\n          balance,\n          expenses: totalExpenses,\n          income: totalIncome,\n        });\n      });\n    } catch (err) {\n      console.error(err);\n    }\n\n    return () => unsubscribe();\n  };\n\n  useEffect(() => {\n    getTransactions();\n  }, []);\n\n  return { transactions, transactionTotals };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SACEC,KAAK,EACLC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,UAAU,QACL,oBAAoB;AAC3B,SAASC,EAAE,QAAQ,2BAA2B;AAC9C,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC;IACzDc,OAAO,EAAE,GAAG;IACZC,MAAM,EAAE,GAAG;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,wBAAwB,GAAGf,UAAU,CAACI,EAAE,EAAE,cAAc,CAAC;EAC/D,MAAM;IAAEY;EAAO,CAAC,GAAGX,cAAc,CAAC,CAAC;EAEnC,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIC,WAAW;IACf,IAAI;MACF,MAAMC,iBAAiB,GAAGpB,KAAK,CAC7BgB,wBAAwB,EACxBd,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEe,MAAM,CAAC,EAC7Bd,OAAO,CAAC,WAAW,CACrB,CAAC;MAEDgB,WAAW,GAAGf,UAAU,CAACgB,iBAAiB,EAAGC,QAAQ,IAAK;QACxD,IAAIC,IAAI,GAAG,EAAE;QACb,IAAIC,WAAW,GAAG,CAAC;QACnB,IAAIC,aAAa,GAAG,CAAC;QAErBH,QAAQ,CAACI,OAAO,CAAEC,GAAG,IAAK;UACxB,MAAMC,IAAI,GAAGD,GAAG,CAACC,IAAI,CAAC,CAAC;UACvB,MAAMC,EAAE,GAAGF,GAAG,CAACE,EAAE;UAEjBN,IAAI,CAACO,IAAI,CAAC;YAAE,GAAGF,IAAI;YAAEC;UAAG,CAAC,CAAC;UAE1B,IAAID,IAAI,CAACG,eAAe,KAAK,SAAS,EAAE;YACtCN,aAAa,IAAIO,MAAM,CAACJ,IAAI,CAACK,iBAAiB,CAAC;UACjD,CAAC,MAAM;YACLT,WAAW,IAAIQ,MAAM,CAACJ,IAAI,CAACK,iBAAiB,CAAC;UAC/C;UAEAC,OAAO,CAACC,GAAG,CAACV,aAAa,EAAED,WAAW,CAAC;QACzC,CAAC,CAAC;QAEFb,eAAe,CAACY,IAAI,CAAC;QAErB,IAAIT,OAAO,GAAGU,WAAW,GAAGC,aAAa;QACzCZ,oBAAoB,CAAC;UACnBC,OAAO;UACPE,QAAQ,EAAES,aAAa;UACvBV,MAAM,EAAES;QACV,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;IACpB;IAEA,OAAO,MAAMhB,WAAW,CAAC,CAAC;EAC5B,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACdoB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAET,YAAY;IAAEE;EAAkB,CAAC;AAC5C,CAAC;AAACH,EAAA,CA7DWD,kBAAkB;EAAA,QASVD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}