{"ast":null,"code":"var _jsxFileName = \"E:\\\\AI Image Generator App\\\\my_project\\\\src\\\\Components\\\\ImageGenerator\\\\ImageGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './ImageGenerator.css';\nimport default_image1 from '../Assets/default_image1.webp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGenerator = () => {\n  _s();\n  const [image_url, setImage_url] = useState(\"/\");\n  let inputRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const imageGenerator = async () => {\n    if (inputRef.current.value === \"\") {\n      return 0;\n    }\n    setLoading(true);\n    const response = await fetch(\"https://api.openai.com/v1/images/generations\", {\n      method: \"POST\",\n      header: {\n        \"Conetnt-Type\": \"application/json\",\n        Authorization: \"Bearer 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\",\n        \"User-Agent\": \"Chrome\"\n      },\n      body: JSON.stringify({\n        prompt: '${inputRef.current.value}',\n        n: 1,\n        size: \"512x512\"\n      })\n    });\n    let data = await response.json();\n    let data_array = data.data;\n    setImage_url(data_array[0].url);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-image-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [\"Ai image \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"self_name\",\n        children: \"Project by Vasudev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image_url === \"/\" ? default_image1 : image_url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: loading ? \"loading-bar-full\" : \"loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: loading ? \"loading-text\" : \"display-none\",\n          children: \"Loading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        className: \"search-input\",\n        placeholder: \"Describe What You want to See\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generate-btn\",\n        onClick: () => {\n          imageGenerator();\n        },\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGenerator, \"hH+H9DyTJ4h0YTG42fpK9q75tHQ=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["React","useRef","useState","default_image1","jsxDEV","_jsxDEV","ImageGenerator","_s","image_url","setImage_url","inputRef","loading","setLoading","imageGenerator","current","value","response","fetch","method","header","Authorization","body","JSON","stringify","prompt","n","size","data","json","data_array","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","ref","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/AI Image Generator App/my_project/src/Components/ImageGenerator/ImageGenerator.jsx"],"sourcesContent":["import React, { useRef,useState } from 'react'\r\nimport './ImageGenerator.css';\r\nimport default_image1 from '../Assets/default_image1.webp' \r\n\r\nconst ImageGenerator = () => {\r\n   const [image_url,setImage_url] = useState(\"/\");\r\n   let inputRef= useRef(null);\r\n   const[loading,setLoading]=useState(false);\r\n \r\n    const imageGenerator = async () =>{\r\n      if(inputRef.current.value===\"\"){\r\n        return 0;\r\n      }\r\n      setLoading(true);\r\n\r\n      const response  = await fetch(\r\n        \"https://api.openai.com/v1/images/generations\",\r\n        {\r\n          method:\"POST\",\r\n          header:{\r\n            \"Conetnt-Type\":\"application/json\",\r\n            Authorization:\r\n            \"Bearer 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\",\r\n            \"User-Agent\":\"Chrome\",\r\n          },\r\n          body:JSON.stringify({\r\n            prompt:'${inputRef.current.value}',\r\n            n:1,\r\n            size:\"512x512\",\r\n          }),\r\n        }\r\n      );\r\n      let data=await response.json();\r\n      let data_array = data.data;\r\n      setImage_url(data_array[0].url);\r\n      setLoading(false);\r\n    }\r\n\r\n\r\n  return (\r\n    <div className='ai-image-generator'>\r\n      <div>\r\n      <div className=\"header\">Ai image <span>generator</span></div>\r\n      <div className=\"self_name\">Project by Vasudev</div> </div>\r\n      <div className=\"img-loading\">\r\n       <div className=\"image\"><img src={image_url===\"/\"?default_image1:image_url} alt=\"\" /></div>\r\n       <div className=\"loading\">\r\n        <div className={loading?\"loading-bar-full\":\"loading-bar\"}></div>\r\n        <div className={loading?\"loading-text\":\"display-none\"}>Loading....</div>\r\n       </div>\r\n      </div>\r\n      <div className=\"search-box\">\r\n        <input type=\"text\" ref={inputRef} className='search-input' placeholder='Describe What You want to See'/>\r\n        <div className=\"generate-btn\" onClick={()=>{imageGenerator()}}>Generate</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageGenerator\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}